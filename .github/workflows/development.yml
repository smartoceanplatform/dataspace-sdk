name: CI Pipeline SmartOcean Virtual Node - development branch

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"

    - name: Install Poetry
      run: |
        python -m pip install --user pipx
        python -m pipx ensurepath
        pipx install poetry
        poetry config virtualenvs.in-project true

    - name: Cache dependencies
      uses: actions/cache@v4
      id: cache
      with:
        path: ./.venv
        key: venv-${{ hashFiles('**/poetry.lock')}}

    - name: Install Poetry dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        # poetry lock
        poetry install --no-root

    - name: Lint with flake8
      run: |
        source .venv/bin/activate
        # stop the build if there are Python syntax errors or undefined names
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests
      run: |
        source .venv/bin/activate
        export PYTHONPATH=$(pwd)/src
        # pytest -sv